// main: styles.less

* > :first-child {margin-top:0!important;}
* > :last-child {margin-bottom:0!important;}
section.container:last-of-type {padding-bottom:0px;}//make sure footer is flush with bottom
* { 
  -moz-box-sizing: border-box; 
  -webkit-box-sizing: border-box; 
  box-sizing: border-box; 
}

@columns: 12;
@column-width:4rem;
@gutter-width: .8rem;
@support-old-ie: true;

#grid() {
  text-align: justify !important;
  text-justify: distribute-all-lines;
  font-size:0!important;
  & > * {
    text-align:left;
  }
  &:after {
    content: '';
    display: inline-block;
    width: 100%;
  }
  .cell() {
    vertical-align: top;
    display: inline-block;
    width: 100%;
  }
  .span(@cols, @total: @columns) {
    width: percentage((@column-width * @cols  + @gutter-width * (@cols  - 1)) /
                      (@column-width * @total + @gutter-width * (@total - 1)));
    margin-bottom: 1.9%;
  }
  .push(@cols, @total: @columns) {
    left: percentage((@column-width + @gutter-width) * @cols /
                     (@column-width * @total + @gutter-width * (@total - 1)));
  }
  .pull(@cols, @total: @columns) {
    left: percentage((@column-width + @gutter-width) * -@cols /
                     (@column-width * @total + @gutter-width * (@total - 1)));
  }
  .prepend(@cols, @total: @columns) {
    margin-left: percentage((@column-width + @gutter-width) * @cols /
                            (@column-width * @total + @gutter-width * (@total - 1)));
  }
  .append(@cols, @total: @columns) {
    margin-right: percentage((@column-width + @gutter-width) * @cols /
                             (@column-width * @total + @gutter-width * (@total - 1)));
  }
}/*  GRID  */

.opacity (@opacity) {
	-webkit-opacity: 	@opacity;
	-moz-opacity: 		@opacity;
	opacity: 		@opacity;
}

@radius:10px;
.radius {
    -moz-border-radius:@radius;
    -webkit-border-radius:@radius;
    border-radius:@radius;/* future proofing */
    -khtml-border-radius:@radius; /* for old Konqueror browsers */}

/*Add label in top-left corner desplaying current media query state.*/
body {
    &:after {
    background: red;
    color: white;
    content: "undefined";
    left: 0;
    .opacity(.5);
    padding: .5em 1em;
    position: fixed;
    text-align: center;
    top: 0;
    z-index: 999;
    @media @mobile {
      background: orange;
      content: "mobile";
    }
    @media @tablet {
      background: purple;
      content: "tablet";
    }
    @media @desktop {
      background: green;
      content: "desktop";
    }
    @media @desktop-xl {
      background: blue;
      content: "desktop-xl";
    }
  }
}

// MQ trigger
// Breakpoints
// ------------------------- Source: http://blog.scur.pl/2012/06/variable-media-queries-less-css/
@highdensity: ~"only screen and (-webkit-min-device-pixel-ratio: 1.5)",
              ~"only screen and (min--moz-device-pixel-ratio: 1.5)",
              ~"only screen and (-o-min-device-pixel-ratio: 3/2)",
              ~"only screen and (min-device-pixel-ratio: 1.5)";
@mobile:      ~"only screen and (max-width: 529px)";
@tablet:      ~"only screen and (min-width: 530px) and (max-width: 768px)";
@desktop:     ~"only screen and (min-width: 769px) and (max-width: 1128px)";
@desktop-xl:  ~"only screen and (min-width: 1129px)";